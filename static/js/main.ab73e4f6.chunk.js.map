{"version":3,"sources":["pages/PageNavLink.tsx","components/MainNav.tsx","api.ts","components/Loader/Loader.tsx","helpers.tsx","components/CurrentPerson.tsx","components/PeopleTable.tsx","pages/PeoplePage.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","MainNav","role","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","getParents","persons","parentType","filter","person","index","parentName","motherName","fatherName","i","length","name","includes","map","CurrentPerson","people","currentPerson","selectedSlug","slug","sex","born","died","mothers","fathers","backgroundColor","style","color","find","p","PeopleTable","useState","setPeople","hasError","setHasError","isLoaded","setIsLoaded","useParams","personSlug","useEffect","fetchedPeople","catch","loadedComponent","PeoplePage","HomePage","NotFoundPage","App","path","element","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ab73e4f6.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport type Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      className={({\n        isActive,\n      }) => classNames('navbar-item', {\n        'has-background-grey-lighter': isActive,\n      })}\n      to={to}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import React from 'react';\nimport { PageNavLink } from '../pages/PageNavLink';\n\nexport const MainNav: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types';\n\nexport const getParents = (persons: Person[], parentType: string) => {\n  return persons.filter((person, index) => {\n    const parentName = parentType === 'mother'\n      ? person.motherName\n      : person.fatherName;\n\n    for (let i = 0; i < persons.length; i += 1) {\n      if (parentName === null) {\n        return false;\n      }\n\n      if (i !== index && persons[i].name.includes(parentName)) {\n        return true;\n      }\n    }\n\n    return false;\n  }).map((person: Person) => (parentType === 'mother'\n    ? person.motherName\n    : person.fatherName));\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\nimport { getParents } from '../helpers';\n\ntype Props = {\n  people: Person[];\n  currentPerson: Person;\n  selectedSlug: string;\n};\n\nexport const CurrentPerson: React.FC<Props> = ({\n  people,\n  currentPerson,\n  selectedSlug,\n}) => {\n  const {\n    slug,\n    name,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n  } = currentPerson;\n\n  const mothers = getParents(people, 'mother');\n  const fathers = getParents(people, 'father');\n\n  const backgroundColor = selectedSlug === slug;\n\n  return (\n    <tr\n      key={slug}\n      data-cy=\"person\"\n      className={classNames({ 'has-background-warning': backgroundColor })}\n    >\n      <td>\n        <Link\n          to={`/people/${slug}`}\n          style={{\n            color: sex === 'm' ? 'blue' : 'red',\n          }}\n        >\n          {name}\n        </Link>\n      </td>\n      <td>\n        {sex}\n      </td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mothers.includes(motherName)\n          ? (\n            <Link\n              to={`/people/${people.find(p => p.name === motherName)?.slug}`}\n              style={{\n                color: mothers.includes(motherName)\n                  ? 'red'\n                  : 'black',\n              }}\n            >\n              {motherName}\n            </Link>\n          )\n          : motherName || '-'}\n      </td>\n      <td>\n        {fathers.includes(fatherName)\n          ? (\n            <Link\n              to={`/people/${people.find(p => p.name === fatherName)?.slug}`}\n              style={{\n                color: fathers.includes(fatherName)\n                  ? 'blue'\n                  : 'black',\n              }}\n            >\n              {fatherName}\n            </Link>\n          )\n          : fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Person } from '../types/Person';\nimport { Loader } from './Loader';\nimport { CurrentPerson } from './CurrentPerson';\n\nexport const PeopleTable: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [hasError, setHasError] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const { personSlug = '' } = useParams();\n\n  useEffect(() => {\n    getPeople()\n      .then((fetchedPeople) => {\n        setPeople(fetchedPeople);\n        setIsLoaded(true);\n      })\n      .catch(() => setHasError(true));\n  }, []);\n\n  const loadedComponent = isLoaded\n    ? (\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {people.map((person) => (\n            <CurrentPerson\n              people={people}\n              currentPerson={person}\n              selectedSlug={personSlug}\n            />\n          ))}\n        </tbody>\n      </table>\n    )\n    : (\n      <Loader />\n    );\n\n  return (\n    <>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {hasError\n          && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {people.length < 0\n            ? (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            )\n            : loadedComponent}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { PeopleTable } from '../components/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <PeopleTable />\n    </>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <>\n      <h1 className=\"title\">Home Page</h1>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => {\n  return (\n    <>\n      <h1 className=\"title\">Not Found Page</h1>\n    </>\n  );\n};\n","import './App.scss';\nimport React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { MainNav } from './components/MainNav';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <MainNav />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <HomePage />\n            }\n          />\n\n          <Route path=\"people\">\n            <Route\n              index\n              element={(\n                <PeoplePage />\n              )}\n            />\n            <Route\n              path=\":personSlug\"\n              element={(\n                <PeoplePage />\n              )}\n            />\n          </Route>\n\n          <Route\n            path=\"*\"\n            element={\n              <NotFoundPage />\n            }\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}